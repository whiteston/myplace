"""
# [1439번 뒤집기](https://www.acmicpc.net/problem/1439)

## 2.뒤집기

다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다. 
다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다. 
다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.

예를 들어 S=0001100 일 때,

전체를 뒤집으면 1110011이 된다.
4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.
하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.

문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

Input : 첫째 줄에 문자열 S가 주어진다. S의 길이는 100만보다 작다.
Output: 첫째 줄에 다솜이가 해야하는 행동의 최소 횟수를 출력한다.
"""


S = input()

count = 0

for i in range(1, len(S)):  
    if S[i - 1] != S[i]: # 0 -> 1, 1 -> 0 으로 바뀔 때마다 카운팅.
        count += 1
    
# 숫자가 여러 개 나오더라도 뒤집기 횟수만 놓고 볼 때 1110011은 101이랑 같음.
# 나열해보면 다음과 같은 규칙성을 가짐.
           # 뒤집기 횟수
# 10            1
# 101           1
# 1010          2
# 10101         2
# 101010        3

print((count+1)//2)  # count 값에 (+ 1) 하고 2로 나눠서 '몫'을 구하면 문제에서 요구하는 답을 구할 수 있다.
        